[ { "title": "Mutual information Maximization By Incorporating Global and Local Feature", "url": "/posts/DeepInfoMax/", "categories": "Representation Learning, mutual information", "tags": "mutual information, unsupervised learning", "date": "2022-07-05 23:09:49 +0800", "snippet": "Mutual information Maximization By Incorporating Global and Local FeatureICLR 2019 Oral Paper Learning deep representations by mutual information estimation and maximizationSummaryIt has been a consensus that a perfect representation of high dimensional data should maximize mutual information between the input and the output. Suppose $X$ is a high dimensional input, e.g an image, and $Y=E_{\\phi}(X)$ is its low dimension representation, then $I(X;Y)$ should reach the maximum if the representation is good. This paper finds that merely maximizing such a “global” mutual information is not enough. They propose two more constrains to guide representation learning. One is trivial——so called “local mutual information”, a simple averaged value of batch mutual information between feature map pixels and global feature vector. The other one is a statistical prior, which help avoids degenerated representation of the former two. This statistical prior takes form of adversarial generative model that incorporates a Discriminator and a Generator. The Generator was changed to a simple $log$ function. These three objectives make up the finial loss function and guide whole representation process. Global Mutual information $I(X;Y) = \\mathbb{E}{\\mathbb{J}}[T{\\omega}(x,y)]-log\\mathbb{E}{\\mathbb{M}}[e^{T{\\omega}(x,y)}]$ Local Mutual information $I(C^{(i)},Y)$ Statistical Constrains $\\mathbb{E}{\\mathbb{V}}\\left[\\log D{\\phi}(y)\\right]+\\mathbb{E}{\\mathbb{P}}\\left[\\log \\left(1-D{\\phi}\\left(E_{\\psi}(x)\\right)\\right)\\right]$Besides, This paper gives the experiment results of three different way to estimate mutual information. Donsker-Varadhan representation Jensen-Shannon MI estimator InfoNCENot finished…" }, { "title": "Build blog with Github Pages and Jekyll", "url": "/posts/Blog-Construction/", "categories": "Blog Construction", "tags": "blog maintenance", "date": "2022-07-04 23:09:49 +0800", "snippet": "Jekyllthis blog was bulit with jekyll.To install jekyll, some prerequisites should be satisfyied, for ubuntu platform, simply run the following commands to install.sudo apt-get install ruby-full build-essential zlib1g-devand change the bash profile so that ruby gem knows where to find himselfecho '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.bashrcecho 'export GEM_HOME=\"$HOME/gems\"' &gt;&gt; ~/.bashrcecho 'export PATH=\"$HOME/gems/bin:$PATH\"' &gt;&gt; ~/.bashrcsource ~/.bashrcand install jekyll and bundlergem install jekyll bundlerChirpy ThemeThis blog adopted Chirpy Theme. I like to use this theme in its minimum. The theme creator has a complete tutorial on how to use, See it heresimple clone the repo and init itgit clone https://github.com/cotes2020/jekyll-theme-chirpy.gitbash tools/init.shthen bundlebundlesome variables in _config.yml should be changed.As for the deployment, I am stilling figuring out how Github Action works, and have to choose the most naive way to deploy.simply runJEKYLL_ENV=production bundle exec jekyll band push _site as a repo to github pageThat is all." } ]
